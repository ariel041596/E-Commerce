[debug] [2019-12-06T08:50:56.293Z] ----------------------------------------------------------------------
[debug] [2019-12-06T08:50:56.295Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\User\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2019-12-06T08:50:56.295Z] CLI Version:   7.9.0
[debug] [2019-12-06T08:50:56.295Z] Platform:      win32
[debug] [2019-12-06T08:50:56.295Z] Node Version:  v10.16.3
[debug] [2019-12-06T08:50:56.297Z] Time:          Fri Dec 06 2019 16:50:56 GMT+0800 (Singapore Standard Time)
[debug] [2019-12-06T08:50:56.297Z] ----------------------------------------------------------------------
[debug] [2019-12-06T08:50:56.297Z] 
[debug] [2019-12-06T08:50:56.306Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-12-06T08:50:56.307Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  E:\E-Commerce Vuejs\e-commerce-techno

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-12-06T08:51:42.075Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2019-12-06T08:51:42.075Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2019-12-06T08:51:42.253Z] <<< HTTP RESPONSE 200
[debug] [2019-12-06T08:51:42.337Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2019-12-06T08:51:43.328Z] <<< HTTP RESPONSE 200
[info] i  Using project e-commerce-77d42 (E-Commerce)
[info] 
=== Firestore Setup
[debug] [2019-12-06T08:51:52.107Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-12-06T08:51:52.110Z] > authorizing via signed-in user
[debug] [2019-12-06T08:51:52.111Z] [iam] checking project e-commerce-77d42 for permissions ["firebase.projects.get"]
[debug] [2019-12-06T08:51:52.113Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/e-commerce-77d42:testIamPermissions  

[debug] [2019-12-06T08:51:53.243Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-12-06T08:51:58.096Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/e-commerce-77d42/releases?pageSize=10&pageToken=  
 
[debug] [2019-12-06T08:51:59.346Z] <<< HTTP RESPONSE 200
[debug] [2019-12-06T08:51:59.348Z] Found ruleset: projects/e-commerce-77d42/rulesets/1666a172-ffc2-45af-bcee-53dea09cc35f
[debug] [2019-12-06T08:51:59.348Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/e-commerce-77d42/rulesets/1666a172-ffc2-45af-bcee-53dea09cc35f  
 
[debug] [2019-12-06T08:52:00.528Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-12-06T08:52:26.309Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/e-commerce-77d42/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-12-06T08:52:26.310Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/e-commerce-77d42/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-12-06T08:52:27.010Z] <<< HTTP RESPONSE 200
[debug] [2019-12-06T08:52:27.308Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2019-12-06T08:52:27.314Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-12-06T08:52:27.315Z] > authorizing via signed-in user
[debug] [2019-12-06T08:52:27.315Z] [iam] checking project e-commerce-77d42 for permissions ["firebase.projects.get"]
[debug] [2019-12-06T08:52:27.316Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/e-commerce-77d42:testIamPermissions  

[debug] [2019-12-06T08:52:28.364Z] <<< HTTP RESPONSE 200
[debug] [2019-12-06T08:52:28.367Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/e-commerce-77d42/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2019-12-06T08:52:28.373Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/e-commerce-77d42/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2019-12-06T08:52:29.851Z] <<< HTTP RESPONSE 200
[debug] [2019-12-06T08:52:29.885Z] <<< HTTP RESPONSE 200
[info] +  Wrote functions/package.json
[info] +  Wrote functions/index.js
[info] +  Wrote functions/.gitignore
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2019-12-06T08:55:34.054Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2019-12-06T08:55:34.161Z] <<< HTTP RESPONSE 200
